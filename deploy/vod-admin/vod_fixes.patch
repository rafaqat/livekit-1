# VOD Implementation Fixes Patch
# Apply these changes to the Rails admin application

## File: app/controllers/videos_controller.rb
## Fix: Remove LiveKit room creation for VOD mode

In the `create` method, replace the room creation logic with:

```ruby
# After line 25 (video_id generation):
# Room name for potential future use (live broadcast mode)
room_name = "video-#{video_id}"

# Only create LiveKit room if explicitly requested for live broadcast mode
# VOD (on_demand) mode doesn't need LiveKit rooms
if params[:streaming_mode] == 'live_broadcast'
  begin
    room = LivekitService.create_room(room_name)
    Rails.logger.info "LiveKit room created: #{room.inspect}"
  rescue => e
    Rails.logger.error "Failed to create LiveKit room: #{e.message}"
    # Continue without room for VOD mode
  end
end

# Store the video record
@video = Video.new(
  video_id: video_id,
  title: params[:title],
  description: params[:description],
  room_name: room_name,
  streaming_mode: params[:streaming_mode] || 'on_demand',
  file_path: file_path
)
```

## File: app/models/video.rb  
## Fix: Make file_path method public

Move the `file_path` method before the `private` declaration:

```ruby
# Move this method to be public (around line 100, before 'private'):
def file_path
  ext = self[:file_extension].presence || 'mp4'
  Rails.root.join('public', 'videos', "#{video_id}.#{ext}")
end

private
# ... rest of private methods
```

## File: app/views/streaming_test/index.html.erb
## Add VOD playback support

Add this JavaScript function for VOD video playback:

```javascript
function playVODVideo(connectionInfo) {
  console.log('Playing VOD video:', connectionInfo);
  
  // Clear any existing content
  const container = document.getElementById('video-container');
  container.innerHTML = '';
  
  // Create HTML5 video element for VOD
  const video = document.createElement('video');
  video.controls = true;
  video.autoplay = true;
  video.style.width = '100%';
  video.style.maxHeight = '500px';
  
  // Build video URL with token
  const videoUrl = `/vod/${connectionInfo.video_id}/stream?token=${connectionInfo.token}`;
  video.src = videoUrl;
  
  container.appendChild(video);
  
  // Update status
  updateConnectionStatus('connected', `Playing VOD: ${connectionInfo.video_id}`);
  
  video.addEventListener('error', (e) => {
    console.error('Video playback error:', e);
    updateConnectionStatus('error', 'Failed to load video');
  });
  
  video.addEventListener('loadeddata', () => {
    console.log('VOD video loaded successfully');
  });
}
```

And modify the connection logic to detect VOD mode:

```javascript
// In the connect() function, add VOD detection:
if (data.streaming_mode === 'on_demand') {
  playVODVideo(data);
  return;
}
```

These fixes ensure that:
1. VOD videos don't create unnecessary LiveKit rooms
2. The file_path method is accessible for streaming endpoints  
3. The UI properly handles VOD playback without WebRTC