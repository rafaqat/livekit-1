<div class="min-h-screen bg-gray-50">
  <div class="container mx-auto px-4 py-8 max-w-3xl">
    <div class="bg-white rounded-lg shadow-lg p-6">
      <h1 class="text-2xl font-bold text-gray-800 mb-6">Start New Recording</h1>
      
      <%= form_with url: create_egress_recordings_path, local: true do |form| %>
        <!-- Recording Type -->
        <div class="mb-6">
          <label class="block text-sm font-medium text-gray-700 mb-2">Recording Type</label>
          <select name="egress_type" id="egress_type" class="w-full border-gray-300 rounded-lg shadow-sm" onchange="toggleFields(this.value)">
            <option value="room_composite">Room Composite (Full Room)</option>
            <option value="track_composite">Track Composite (Selected Tracks)</option>
            <option value="track">Single Track</option>
          </select>
        </div>
        
        <!-- Room Selection -->
        <div class="mb-6">
          <label class="block text-sm font-medium text-gray-700 mb-2">Room</label>
          <select name="room_name" class="w-full border-gray-300 rounded-lg shadow-sm" required onchange="loadParticipants(this.value)">
            <option value="">Select a room...</option>
            <% @rooms.each do |room| %>
              <option value="<%= room['name'] %>" <%= 'selected' if @room_name == room['name'] %>>
                <%= room['name'] %> (<%= room['num_participants'] %> participants)
              </option>
            <% end %>
          </select>
        </div>
        
        <!-- Layout (for room composite) -->
        <div class="mb-6" id="layout_field">
          <label class="block text-sm font-medium text-gray-700 mb-2">Layout</label>
          <select name="layout" class="w-full border-gray-300 rounded-lg shadow-sm">
            <option value="speaker-dark">Speaker Dark</option>
            <option value="speaker-light">Speaker Light</option>
            <option value="grid-dark">Grid Dark</option>
            <option value="grid-light">Grid Light</option>
          </select>
        </div>
        
        <!-- Audio Only Option -->
        <div class="mb-6" id="audio_only_field">
          <label class="flex items-center">
            <input type="checkbox" name="audio_only" value="true" class="mr-2">
            <span class="text-sm font-medium text-gray-700">Audio Only</span>
          </label>
        </div>
        
        <!-- Track Selection (for track-based recording) -->
        <div class="mb-6 hidden" id="track_fields">
          <label class="block text-sm font-medium text-gray-700 mb-2">Select Tracks</label>
          <div id="track_list" class="space-y-2 text-sm text-gray-600">
            Select a room first to see available tracks
          </div>
        </div>
        
        <!-- Output Configuration -->
        <div class="mb-6">
          <label class="block text-sm font-medium text-gray-700 mb-2">Output Type</label>
          <select name="output_type" id="output_type" class="w-full border-gray-300 rounded-lg shadow-sm" onchange="toggleOutput(this.value)">
            <option value="file">File Recording</option>
            <option value="stream">Stream (RTMP)</option>
          </select>
        </div>
        
        <!-- File Output -->
        <div class="mb-6" id="file_output">
          <label class="block text-sm font-medium text-gray-700 mb-2">File Path (optional)</label>
          <input type="text" name="filepath" placeholder="/recordings/room_TIMESTAMP.mp4" 
                 class="w-full border-gray-300 rounded-lg shadow-sm">
          <p class="text-xs text-gray-500 mt-1">Leave empty for automatic naming</p>
        </div>
        
        <!-- Stream Output -->
        <div class="mb-6 hidden" id="stream_output">
          <label class="block text-sm font-medium text-gray-700 mb-2">RTMP Stream URLs</label>
          <textarea name="stream_urls" rows="3" placeholder="rtmp://stream.example.com/live/streamkey" 
                    class="w-full border-gray-300 rounded-lg shadow-sm"></textarea>
          <p class="text-xs text-gray-500 mt-1">For multiple streams, separate with commas</p>
        </div>
        
        <!-- Submit Buttons -->
        <div class="flex justify-between">
          <%= link_to "Cancel", recordings_path, class: "bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg transition" %>
          <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg transition">
            Start Recording
          </button>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
  function toggleFields(type) {
    const layoutField = document.getElementById('layout_field');
    const audioOnlyField = document.getElementById('audio_only_field');
    const trackFields = document.getElementById('track_fields');
    
    if (type === 'room_composite') {
      layoutField.classList.remove('hidden');
      audioOnlyField.classList.remove('hidden');
      trackFields.classList.add('hidden');
    } else if (type === 'track_composite' || type === 'track') {
      layoutField.classList.add('hidden');
      audioOnlyField.classList.add('hidden');
      trackFields.classList.remove('hidden');
    }
  }
  
  function toggleOutput(type) {
    const fileOutput = document.getElementById('file_output');
    const streamOutput = document.getElementById('stream_output');
    
    if (type === 'file') {
      fileOutput.classList.remove('hidden');
      streamOutput.classList.add('hidden');
    } else {
      fileOutput.classList.add('hidden');
      streamOutput.classList.remove('hidden');
    }
  }
  
  function loadParticipants(roomName) {
    if (!roomName) return;
    
    // This would need an AJAX endpoint to load participants and their tracks
    const trackList = document.getElementById('track_list');
    trackList.innerHTML = 'Loading tracks...';
    
    // Placeholder - would need actual AJAX call
    fetch(`/rooms/${roomName}/participants.json`)
      .then(response => response.json())
      .then(data => {
        let html = '';
        data.participants.forEach(p => {
          p.tracks.forEach(t => {
            html += `
              <label class="flex items-center">
                <input type="checkbox" name="${t.type === 'VIDEO' ? 'video_track_id' : 'audio_track_id'}" value="${t.sid}" class="mr-2">
                <span>${p.name} - ${t.type}</span>
              </label>
            `;
          });
        });
        trackList.innerHTML = html || 'No tracks available';
      })
      .catch(() => {
        trackList.innerHTML = 'Unable to load tracks';
      });
  }
</script>